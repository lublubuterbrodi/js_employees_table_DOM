{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var employeeTable = document.querySelector(\"table\");\n    var currentSort = {\n        column: null,\n        order: \"asc\"\n    };\n    var selectedRow = null;\n    var headers = document.querySelectorAll(\"th\");\n    headers.forEach(function(header, index) {\n        header.addEventListener(\"click\", function() {\n            var order = currentSort.column === index && currentSort.order === \"asc\" ? \"desc\" : \"asc\";\n            sortTable(employeeTable, index, order);\n            currentSort = {\n                column: index,\n                order: order\n            };\n        });\n    });\n    function sortTable(table, columnIndex, order) {\n        var rows = Array.from(table.tBodies[0].rows);\n        var isNumeric = columnIndex === 3 || columnIndex === 4;\n        rows.sort(function(rowA, rowB) {\n            var a = rowA.cells[columnIndex].innerText.trim();\n            var b = rowB.cells[columnIndex].innerText.trim();\n            if (isNumeric) {\n                a = parseFloat(a.replace(/[^0-9.-]+/g, \"\"));\n                b = parseFloat(b.replace(/[^0-9.-]+/g, \"\"));\n            }\n            if (order === \"asc\") return isNumeric ? a - b : a.localeCompare(b);\n            else return isNumeric ? b - a : b.localeCompare(a);\n        });\n        rows.forEach(function(row) {\n            return table.tBodies[0].appendChild(row);\n        });\n    }\n    employeeTable.addEventListener(\"click\", function(e) {\n        if (e.target.tagName === \"TD\") {\n            var row = e.target.parentNode;\n            if (selectedRow) selectedRow.classList.remove(\"active\");\n            selectedRow = row;\n            row.classList.add(\"active\");\n        }\n    });\n    var formHtml = '\\n    <form class=\"new-employee-form\">\\n      <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\\n      <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\\n      <label>Office:\\n        <select name=\"office\" data-qa=\"office\">\\n          <option>Tokyo</option>\\n          <option>Singapore</option>\\n          <option>London</option>\\n          <option>New York</option>\\n          <option>Edinburgh</option>\\n          <option>San Francisco</option>\\n        </select>\\n      </label>\\n      <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\\n      <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\\n      <button type=\"button\" id=\"save-button\">Save to table</button>\\n    </form>\\n  ';\n    document.body.insertAdjacentHTML(\"beforeend\", formHtml);\n    var form = document.querySelector(\".new-employee-form\");\n    var saveButton = document.getElementById(\"save-button\");\n    saveButton.addEventListener(\"click\", function() {\n        var employeeName = form.name.value.trim();\n        var position = form.position.value.trim();\n        var office = form.office.value;\n        var age = form.age.value;\n        var salary = form.salary.value;\n        if (employeeName.length < 4) {\n            showNotification(\"Error\", \"Name must be at least 4 characters long\", \"error\");\n            return;\n        }\n        if (age < 18 || age > 90) {\n            showNotification(\"Error\", \"Age must be between 18 and 90\", \"error\");\n            return;\n        }\n        if (!employeeName || !position || !office || !age || !salary) {\n            showNotification(\"Error\", \"All fields are required\", \"error\");\n            return;\n        }\n        var formattedSalary = \"$\".concat(Number(salary).toLocaleString(\"en-US\"));\n        var newRow = document.createElement(\"tr\");\n        newRow.innerHTML = \"\\n      <td>\".concat(employeeName, \"</td>\\n      <td>\").concat(position, \"</td>\\n      <td>\").concat(office, \"</td>\\n      <td>\").concat(age, \"</td>\\n      <td>\").concat(formattedSalary, \"</td>\\n    \");\n        employeeTable.querySelector(\"tbody\").appendChild(newRow);\n        showNotification(\"Success\", \"Employee added to the table\", \"success\");\n        form.reset();\n    });\n    function showNotification(title, message, type) {\n        var notification = document.createElement(\"div\");\n        notification.className = \"notification \".concat(type);\n        notification.setAttribute(\"data-qa\", \"notification\");\n        notification.innerHTML = '\\n      <span class=\"title\">'.concat(title, \"</span>\\n      <p>\").concat(message, \"</p>\\n    \");\n        document.body.appendChild(notification);\n        setTimeout(function() {\n            notification.remove();\n        }, 3000);\n    }\n    employeeTable.addEventListener(\"dblclick\", function(e) {\n        var cell = e.target;\n        if (cell.tagName === \"TD\") {\n            var initialText = cell.innerText;\n            var input = document.createElement(\"input\");\n            input.className = \"cell-input\";\n            input.value = initialText;\n            cell.innerText = \"\";\n            cell.appendChild(input);\n            input.focus();\n            input.addEventListener(\"blur\", function() {\n                var newValue = input.value.trim();\n                cell.innerText = newValue === \"\" ? initialText : newValue;\n            });\n            input.addEventListener(\"keypress\", function(evt) {\n                if (evt.key === \"Enter\") input.blur();\n            });\n        }\n    });\n});\n\n//# sourceMappingURL=index.4c25f72a.js.map\n","'use strict';\n\n// write code here\ndocument.addEventListener('DOMContentLoaded', function () {\n  const employeeTable = document.querySelector('table');\n  let currentSort = { column: null, order: 'asc' };\n  let selectedRow = null;\n\n  const headers = document.querySelectorAll('th');\n\n  headers.forEach((header, index) => {\n    header.addEventListener('click', () => {\n      const order =\n        currentSort.column === index && currentSort.order === 'asc'\n          ? 'desc'\n          : 'asc';\n\n      sortTable(employeeTable, index, order);\n      currentSort = { column: index, order: order };\n    });\n  });\n\n  function sortTable(table, columnIndex, order) {\n    const rows = Array.from(table.tBodies[0].rows);\n    const isNumeric = columnIndex === 3 || columnIndex === 4;\n\n    rows.sort((rowA, rowB) => {\n      let a = rowA.cells[columnIndex].innerText.trim();\n      let b = rowB.cells[columnIndex].innerText.trim();\n\n      if (isNumeric) {\n        a = parseFloat(a.replace(/[^0-9.-]+/g, ''));\n        b = parseFloat(b.replace(/[^0-9.-]+/g, ''));\n      }\n\n      if (order === 'asc') {\n        return isNumeric ? a - b : a.localeCompare(b);\n      } else {\n        return isNumeric ? b - a : b.localeCompare(a);\n      }\n    });\n\n    rows.forEach((row) => table.tBodies[0].appendChild(row));\n  }\n\n  employeeTable.addEventListener('click', function (e) {\n    if (e.target.tagName === 'TD') {\n      const row = e.target.parentNode;\n\n      if (selectedRow) {\n        selectedRow.classList.remove('active');\n      }\n      selectedRow = row;\n      row.classList.add('active');\n    }\n  });\n\n  const formHtml = `\n    <form class=\"new-employee-form\">\n      <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\n      <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\n      <label>Office:\n        <select name=\"office\" data-qa=\"office\">\n          <option>Tokyo</option>\n          <option>Singapore</option>\n          <option>London</option>\n          <option>New York</option>\n          <option>Edinburgh</option>\n          <option>San Francisco</option>\n        </select>\n      </label>\n      <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\n      <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\n      <button type=\"button\" id=\"save-button\">Save to table</button>\n    </form>\n  `;\n\n  document.body.insertAdjacentHTML('beforeend', formHtml);\n\n  const form = document.querySelector('.new-employee-form');\n  const saveButton = document.getElementById('save-button');\n\n  saveButton.addEventListener('click', () => {\n    const employeeName = form.name.value.trim();\n    const position = form.position.value.trim();\n    const office = form.office.value;\n    const age = form.age.value;\n    const salary = form.salary.value;\n\n    if (employeeName.length < 4) {\n      showNotification(\n        'Error',\n        'Name must be at least 4 characters long',\n        'error',\n      );\n\n      return;\n    }\n\n    if (age < 18 || age > 90) {\n      showNotification('Error', 'Age must be between 18 and 90', 'error');\n\n      return;\n    }\n\n    if (!employeeName || !position || !office || !age || !salary) {\n      showNotification('Error', 'All fields are required', 'error');\n\n      return;\n    }\n\n    const formattedSalary = `$${Number(salary).toLocaleString('en-US')}`;\n\n    const newRow = document.createElement('tr');\n\n    newRow.innerHTML = `\n      <td>${employeeName}</td>\n      <td>${position}</td>\n      <td>${office}</td>\n      <td>${age}</td>\n      <td>${formattedSalary}</td>\n    `;\n    employeeTable.querySelector('tbody').appendChild(newRow);\n\n    showNotification('Success', 'Employee added to the table', 'success');\n    form.reset();\n  });\n\n  function showNotification(title, message, type) {\n    const notification = document.createElement('div');\n\n    notification.className = `notification ${type}`;\n    notification.setAttribute('data-qa', 'notification');\n\n    notification.innerHTML = `\n      <span class=\"title\">${title}</span>\n      <p>${message}</p>\n    `;\n    document.body.appendChild(notification);\n\n    setTimeout(() => {\n      notification.remove();\n    }, 3000);\n  }\n\n  employeeTable.addEventListener('dblclick', function (e) {\n    const cell = e.target;\n\n    if (cell.tagName === 'TD') {\n      const initialText = cell.innerText;\n      const input = document.createElement('input');\n\n      input.className = 'cell-input';\n      input.value = initialText;\n      cell.innerText = '';\n      cell.appendChild(input);\n      input.focus();\n\n      input.addEventListener('blur', () => {\n        const newValue = input.value.trim();\n\n        cell.innerText = newValue === '' ? initialText : newValue;\n      });\n\n      input.addEventListener('keypress', (evt) => {\n        if (evt.key === 'Enter') {\n          input.blur();\n        }\n      });\n    }\n  });\n});\n"],"names":["document","addEventListener","employeeTable","querySelector","currentSort","column","order","selectedRow","headers","querySelectorAll","forEach","header","index","rows","isNumeric","Array","from","table","tBodies","columnIndex","sort","rowA","rowB","a","cells","innerText","trim","b","parseFloat","replace","localeCompare","row","appendChild","e","target","tagName","parentNode","classList","remove","add","body","insertAdjacentHTML","form","showNotification","title","message","type","notification","createElement","className","concat","setAttribute","innerHTML","setTimeout","saveButton","getElementById","employeeName","name","value","position","office","age","salary","length","formattedSalary","Number","toLocaleString","newRow","reset","cell","initialText","input","focus","newValue","evt","key","blur"],"version":3,"file":"index.4c25f72a.js.map"}